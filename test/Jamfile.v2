# Boost.Range 2.0 Extension library
# via PStade Oven Library
#
# Copyright Akira Takahashi 2011.
# Copyright Shunsuke Sogame 2005-2007.
# Use, modification and distribution is subject to the Boost Software License,
# Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

# bring in rules for testing
import testing ;

project
    : requirements
        <link>static
        <threading>multi
    ;

rule range-test ( name : includes * )
{
    return [
        run $(name).cpp
        :
        :
        : <toolset>gcc:<cxxflags>"-Wall -Wunused"
        ] ;
}

test-suite range_extension :
    [ compile-fail compile_fail/adaptor/adjacent_zipped_concept.cpp ]
    [ compile-fail compile_fail/adaptor/adjacent_zipped_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/adjacent_zipped_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/adjacent_zipped_concept4.cpp ]
    [ compile-fail compile_fail/adaptor/dropped_concept.cpp ]
    [ compile-fail compile_fail/adaptor/dropped_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/dropped_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/dropped_concept4.cpp ]
    [ compile-fail compile_fail/adaptor/dropped_while_concept.cpp ]
    [ compile-fail compile_fail/adaptor/dropped_while_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/dropped_while_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/dropped_while_concept4.cpp ]
    [ compile-fail compile_fail/adaptor/elements_concept.cpp ]
    [ compile-fail compile_fail/adaptor/elements_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/elements_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/elements_concept4.cpp ]
    [ compile-fail compile_fail/adaptor/elements_key_concept.cpp ]
    [ compile-fail compile_fail/adaptor/elements_key_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/elements_key_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/elements_key_concept4.cpp ]
    [ compile-fail compile_fail/adaptor/memoized_concept.cpp ]
    [ compile-fail compile_fail/adaptor/memoized_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/memoized_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/memoized_concept4.cpp ]
    [ compile-fail compile_fail/adaptor/outdirected_concept.cpp ]
    [ compile-fail compile_fail/adaptor/outdirected_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/outdirected_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/outdirected_concept4.cpp ]
    [ compile-fail compile_fail/adaptor/taken_concept.cpp ]
    [ compile-fail compile_fail/adaptor/taken_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/taken_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/taken_concept4.cpp ]
    [ compile-fail compile_fail/adaptor/taken_while_concept.cpp ]
    [ compile-fail compile_fail/adaptor/taken_while_concept2.cpp ]
    [ compile-fail compile_fail/adaptor/taken_while_concept3.cpp ]
    [ compile-fail compile_fail/adaptor/taken_while_concept4.cpp ]
    [ range-test adaptor_test/adjacent_zipped ]
    [ range-test adaptor_test/dropped ]
    [ range-test adaptor_test/dropped_while ]
    [ range-test adaptor_test/elements ]
    [ range-test adaptor_test/elements_key ]
    [ range-test adaptor_test/memoized ]
    [ range-test adaptor_test/outdirected ]
    [ range-test adaptor_test/taken ]
    [ range-test adaptor_test/taken_while ]
    [ range-test access_test/at ]
    [ range-test access_test/back ]
    [ range-test access_test/front ]
    [ range-test algorithm_ext_test/fused_for_each ]
    [ run directory_range.cpp /boost/filesystem//boost_filesystem : :
        : <toolset>gcc:<cxxflags>"-Wall -Wunused" ]
    [ range-test iteration ]
    [ range-test member_select_example ]
    [ range-test regular ]
    [ range-test regular_nullary_call ]
    [ range-test regular_example ]
    [ range-test regular_operator_example ]
    [ range-test single ]
    [ range-test split_at ]
	[ range-test as_container ]
    ;

